// Code generated by MockGen. DO NOT EDIT.
// Source: internal/api/gmail_handler.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	service "github.com/desponda/inbox-whisperer/internal/service"
	gomock "github.com/golang/mock/gomock"
	oauth2 "golang.org/x/oauth2"
)

// MockGmailServiceInterface is a mock of GmailServiceInterface interface.
type MockGmailServiceInterface struct {
	ctrl     *gomock.Controller
	recorder *MockGmailServiceInterfaceMockRecorder
}

// MockGmailServiceInterfaceMockRecorder is the mock recorder for MockGmailServiceInterface.
type MockGmailServiceInterfaceMockRecorder struct {
	mock *MockGmailServiceInterface
}

// NewMockGmailServiceInterface creates a new mock instance.
func NewMockGmailServiceInterface(ctrl *gomock.Controller) *MockGmailServiceInterface {
	mock := &MockGmailServiceInterface{ctrl: ctrl}
	mock.recorder = &MockGmailServiceInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGmailServiceInterface) EXPECT() *MockGmailServiceInterfaceMockRecorder {
	return m.recorder
}

// FetchMessageContent mocks base method.
func (m *MockGmailServiceInterface) FetchMessageContent(ctx context.Context, token *oauth2.Token, id string) (*service.MessageContent, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FetchMessageContent", ctx, token, id)
	ret0, _ := ret[0].(*service.MessageContent)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FetchMessageContent indicates an expected call of FetchMessageContent.
func (mr *MockGmailServiceInterfaceMockRecorder) FetchMessageContent(ctx, token, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FetchMessageContent", reflect.TypeOf((*MockGmailServiceInterface)(nil).FetchMessageContent), ctx, token, id)
}

// FetchMessages mocks base method.
func (m *MockGmailServiceInterface) FetchMessages(ctx context.Context, token *oauth2.Token) ([]service.MessageSummary, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FetchMessages", ctx, token)
	ret0, _ := ret[0].([]service.MessageSummary)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FetchMessages indicates an expected call of FetchMessages.
func (mr *MockGmailServiceInterfaceMockRecorder) FetchMessages(ctx, token interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FetchMessages", reflect.TypeOf((*MockGmailServiceInterface)(nil).FetchMessages), ctx, token)
}
