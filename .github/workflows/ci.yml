name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  docs-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Lint markdown docs
        uses: DavidAnson/markdownlint-cli2-action@v15
        with:
          globs: docs/**/*.md

  setup:
    runs-on: ubuntu-latest
    outputs:
      go-cache: ${{ steps.go-cache.outputs.cache-hit }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24.2'
      - name: Cache Go modules
        id: go-cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Install golangci-lint
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b . v1.64.8
          sudo mv golangci-lint /usr/local/bin/golangci-lint
      - name: Install staticcheck
        run: |
          curl -sSfL https://github.com/dominikh/go-tools/releases/download/2025.1.1/staticcheck_linux_amd64.tar.gz | tar -xz -C /tmp
          sudo mv /tmp/staticcheck/staticcheck /usr/local/bin/staticcheck
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.14.0'
          cache: 'npm'
      - name: Pin npm version
        run: npm install -g npm@11.3.0
      - name: Install migrate
        run: |
          curl -L https://github.com/golang-migrate/migrate/releases/download/v4.18.2/migrate.linux-amd64.tar.gz | tar xvz
          sudo mv migrate /usr/local/bin/migrate

  backend-lint:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v3
      - name: Install golangci-lint
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b . v1.64.8
          sudo mv golangci-lint /usr/local/bin/golangci-lint
      - name: Lint
        run: make lint

  backend-test:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v3
      - name: Test
        run: make test

  backend-vet:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v3
      - name: Vet
        run: make vet

  backend-staticcheck:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v3
      - name: Install staticcheck
        run: |
          curl -sSfL https://github.com/dominikh/go-tools/releases/download/2025.1.1/staticcheck_linux_amd64.tar.gz | tar -xz -C /tmp
          sudo mv /tmp/staticcheck/staticcheck /usr/local/bin/staticcheck
      - name: Staticcheck
        run: make staticcheck

  backend-tidy:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v3
      - name: Tidy
        run: make tidy

  backend-build:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v3
      - name: Build
        run: go build ./...

  backend-clean:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v3
      - name: Clean
        run: make clean

  frontend-install:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies
        run: make ui-install

  frontend-lint:
    runs-on: ubuntu-latest
    needs: frontend-install
    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies
        run: npm ci --prefix web
      - name: Check formatting (Prettier)
        run: make ui-fmt
      - name: Lint frontend
        run: make ui-lint

  frontend-test:
    runs-on: ubuntu-latest
    needs: frontend-install
    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies
        run: npm ci --prefix web
      - name: Test frontend
        run: make ui-test

  frontend-build:
    runs-on: ubuntu-latest
    needs: frontend-install
    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies
        run: npm ci --prefix web
      - name: Build frontend
        run: make ui-build

  enforce-pr:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Check PR title
        uses: amannn/action-semantic-pull-request@v5
        with:
          types: feat,fix,chore,docs,refactor,style,test,perf,build,ci
          requireScope: false
          subjectPattern: ".+"
          wip: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Require PR to be up to date with main
        uses: actions/github-script@v7
        with:
          script: |
            const pr = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number
            });
            if (pr.data.base.ref !== 'main') {
              core.setFailed('PRs must target the main branch.');
            }
      - name: Require approvals
        uses: actions/github-script@v7
        with:
          script: |
            const reviews = await github.rest.pulls.listReviews({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number
            });
            const approvals = reviews.data.filter(r => r.state === 'APPROVED');
            if (approvals.length < 1) {
              core.setFailed('At least one approval is required.');
            }
