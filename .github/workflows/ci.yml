name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-test-lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install golangci-lint
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.55.2

      - name: Lint
        run: make lint

      - name: Test
        run: make test

      - name: Vet
        run: make vet

      - name: Staticcheck
        run: make staticcheck

      - name: Tidy
        run: make tidy

      - name: Build
        run: go build ./...

      - name: Clean
        run: make clean
      - name: Install dependencies
        run: make ui-install

      - name: Lint frontend
        run: make ui-lint

      - name: Test frontend
        run: make ui-test

      - name: Build frontend
        run: make ui-build

  enforce-pr:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Check PR title
        uses: amannn/action-semantic-pull-request@v5
        with:
          types: feat,fix,chore,docs,refactor,style,test,perf,build,ci
          requireScope: false
          requireTicketNumber: false
          subjectPattern: ".+"
          wip: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Require PR to be up to date with main
        uses: actions/github-script@v7
        with:
          script: |
            const pr = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number
            });
            if (pr.data.base.ref !== 'main') {
              core.setFailed('PRs must target the main branch.');
            }
      - name: Require approvals
        uses: actions/github-script@v7
        with:
          script: |
            const reviews = await github.rest.pulls.listReviews({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number
            });
            const approvals = reviews.data.filter(r => r.state === 'APPROVED');
            if (approvals.length < 1) {
              core.setFailed('At least one approval is required.');
            }
